# Script de prueba para verificar las APIs en producci√≥n

Write-Host "üß™ PRUEBAS DE PRODUCCI√ìN - ZEORVI.COM" -ForegroundColor Cyan
Write-Host "======================================" -ForegroundColor Cyan
Write-Host ""

$baseUrl = "https://www.zeorvi.com"
$hoy = Get-Date
$manana = $hoy.AddDays(1).ToString("yyyy-MM-dd")

Write-Host "üìÖ Fecha de hoy: $($hoy.ToString('yyyy-MM-dd'))" -ForegroundColor Yellow
Write-Host "üìÖ Fecha de ma√±ana: $manana" -ForegroundColor Yellow
Write-Host ""

# Test 1: Health Check
Write-Host "1Ô∏è‚É£  Test: Health Check" -ForegroundColor Green
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/health" -Method Get -ErrorAction Stop
    Write-Host "   ‚úÖ Health check OK" -ForegroundColor Green
    Write-Host "   Response: $($response | ConvertTo-Json -Compress)" -ForegroundColor Gray
} catch {
    Write-Host "   ‚ùå Health check failed: $($_.Exception.Message)" -ForegroundColor Red
}
Write-Host ""

# Test 2: Verificar disponibilidad (POST con fecha real)
Write-Host "2Ô∏è‚É£  Test: Verificar Disponibilidad (POST - fecha real)" -ForegroundColor Green
try {
    $body = @{
        restaurantId = "rest_003"
        fecha = $manana
        hora = "20:00"
        personas = 4
        zona = "Sal√≥n Principal"
    } | ConvertTo-Json

    $response = Invoke-RestMethod -Uri "$baseUrl/api/google-sheets/disponibilidad" -Method Post -Body $body -ContentType "application/json" -ErrorAction Stop
    Write-Host "   ‚úÖ Verificaci√≥n de disponibilidad OK" -ForegroundColor Green
    Write-Host "   Disponible: $($response.disponible)" -ForegroundColor Yellow
    Write-Host "   Mensaje: $($response.mensaje)" -ForegroundColor Yellow
} catch {
    Write-Host "   ‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
}
Write-Host ""

# Test 3: Obtener horarios
Write-Host "3Ô∏è‚É£  Test: Obtener Horarios" -ForegroundColor Green
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/google-sheets/horarios?restaurantId=rest_003" -Method Get -ErrorAction Stop
    Write-Host "   ‚úÖ Horarios obtenidos OK" -ForegroundColor Green
    Write-Host "   Cantidad de horarios: $($response.horarios.Count)" -ForegroundColor Yellow
} catch {
    Write-Host "   ‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
}
Write-Host ""

# Test 4: Obtener mesas
Write-Host "4Ô∏è‚É£  Test: Obtener Mesas" -ForegroundColor Green
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/google-sheets/mesas?restaurantId=rest_003" -Method Get -ErrorAction Stop
    Write-Host "   ‚úÖ Mesas obtenidas OK" -ForegroundColor Green
    Write-Host "   Cantidad de mesas: $($response.mesas.Count)" -ForegroundColor Yellow
} catch {
    Write-Host "   ‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
}
Write-Host ""

# Test 5: Obtener d√≠as cerrados
Write-Host "5Ô∏è‚É£  Test: Obtener D√≠as Cerrados" -ForegroundColor Green
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/api/google-sheets/dias-cerrados?restaurantId=rest_003" -Method Get -ErrorAction Stop
    Write-Host "   ‚úÖ D√≠as cerrados obtenidos OK" -ForegroundColor Green
    Write-Host "   D√≠as cerrados: $($response.diasCerrados -join ', ')" -ForegroundColor Yellow
} catch {
    Write-Host "   ‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
}
Write-Host ""

# Test 6: Funci√≥n de Retell - obtener_horarios_y_dias_cerrados
Write-Host "6Ô∏è‚É£  Test: Retell Function - obtener_horarios_y_dias_cerrados" -ForegroundColor Green
try {
    $body = @{
        name = "obtener_horarios_y_dias_cerrados"
        parameters = @{}
    } | ConvertTo-Json

    $response = Invoke-RestMethod -Uri "$baseUrl/api/retell/functions" -Method Post -Body $body -ContentType "application/json" -ErrorAction Stop
    Write-Host "   ‚úÖ Funci√≥n ejecutada OK" -ForegroundColor Green
    Write-Host "   D√≠as cerrados: $($response.result.diasCerrados -join ', ')" -ForegroundColor Yellow
    Write-Host "   Horarios: $($response.result.horarios.Count) registros" -ForegroundColor Yellow
} catch {
    Write-Host "   ‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
}
Write-Host ""

# Test 7: Funci√≥n de Retell - verificar_disponibilidad (con "ma√±ana")
Write-Host "7Ô∏è‚É£  Test: Retell Function - verificar_disponibilidad (normalizaci√≥n de fecha)" -ForegroundColor Green
try {
    $body = @{
        name = "verificar_disponibilidad"
        parameters = @{
            fecha = "ma√±ana"
            hora = "20:00"
            personas = 4
        }
    } | ConvertTo-Json

    $response = Invoke-RestMethod -Uri "$baseUrl/api/retell/functions" -Method Post -Body $body -ContentType "application/json" -ErrorAction Stop
    Write-Host "   ‚úÖ Funci√≥n ejecutada OK" -ForegroundColor Green
    Write-Host "   Fecha normalizada a: $($response.fecha)" -ForegroundColor Yellow
    Write-Host "   Disponible: $($response.result.disponible)" -ForegroundColor Yellow
    Write-Host "   Mensaje: $($response.result.mensaje)" -ForegroundColor Yellow
} catch {
    Write-Host "   ‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
    if ($_.ErrorDetails.Message) {
        Write-Host "   Detalles: $($_.ErrorDetails.Message)" -ForegroundColor Red
    }
}
Write-Host ""

# Test 8: Funci√≥n de Retell - verificar_disponibilidad (grupo grande)
Write-Host "8Ô∏è‚É£  Test: Retell Function - grupo grande (>6 personas)" -ForegroundColor Green
try {
    $body = @{
        name = "verificar_disponibilidad"
        parameters = @{
            fecha = $manana
            hora = "20:00"
            personas = 8
        }
    } | ConvertTo-Json

    $response = Invoke-RestMethod -Uri "$baseUrl/api/retell/functions" -Method Post -Body $body -ContentType "application/json" -ErrorAction Stop
    Write-Host "   ‚úÖ Funci√≥n ejecutada OK" -ForegroundColor Green
    Write-Host "   Disponible: $($response.result.disponible)" -ForegroundColor Yellow
    Write-Host "   Mensaje: $($response.result.mensaje)" -ForegroundColor Yellow
    if ($response.result.mensaje -match "compa√±ero") {
        Write-Host "   ‚úÖ Detect√≥ grupo grande correctamente!" -ForegroundColor Green
    }
} catch {
    Write-Host "   ‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
}
Write-Host ""

# Resumen final
Write-Host ""
Write-Host "üéØ RESUMEN DE PRUEBAS" -ForegroundColor Cyan
Write-Host "=====================" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚úÖ Pruebas completadas" -ForegroundColor Green
Write-Host "üìÖ Fecha de prueba: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" -ForegroundColor Gray
Write-Host ""
Write-Host "üîó URLs principales:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ API Health: $baseUrl/api/health"
Write-Host "   ‚Ä¢ Retell Functions: $baseUrl/api/retell/functions"
Write-Host "   ‚Ä¢ Google Sheets API: $baseUrl/api/google-sheets/*"
Write-Host ""
Write-Host "üìû Ahora puedes hacer una llamada real al agente!" -ForegroundColor Green
Write-Host "   N√∫mero de prueba: 689460069" -ForegroundColor Yellow
Write-Host ""

