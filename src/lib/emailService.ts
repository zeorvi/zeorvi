// Servicio de env√≠o de emails
// En producci√≥n esto se conectar√≠a con Gmail API o SendGrid

export interface EmailCredentials {
  restaurantName: string;
  username: string;
  email: string;
  password: string;
  loginUrl: string;
}

export async function sendCredentialsEmail(credentials: EmailCredentials): Promise<void> {
  // Simular env√≠o de email (en producci√≥n usar√≠as Gmail API, SendGrid, etc.)
  
  const emailContent = `
Bienvenido a Restaurante IA Plataforma

Hola ${credentials.restaurantName},

Tu cuenta ha sido creada exitosamente. Aqu√≠ est√°n tus credenciales de acceso:

üë§ Usuario: ${credentials.username}
üìß Email: ${credentials.email}
üîë Contrase√±a: ${credentials.password}

üåê Accede a: ${credentials.loginUrl}

‚ö†Ô∏è IMPORTANTE:
- Esta es una contrase√±a temporal
- Debes cambiarla en tu primer login
- Guarda estas credenciales en un lugar seguro

¬øNecesitas ayuda? Contacta al administrador.

¬°Bienvenido a la plataforma!
  `;

  // Simular env√≠o exitoso
  console.log('üìß ===========================================');
  console.log('üìß EMAIL ENVIADO EXITOSAMENTE');
  console.log('üìß ===========================================');
  console.log(`üìß Para: ${credentials.email}`);
  console.log(`üìß Asunto: Bienvenido a Restaurante IA Plataforma`);
  console.log('üìß ===========================================');
  console.log(emailContent);
  console.log('üìß ===========================================');
  
  // Simular delay de env√≠o
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  return Promise.resolve();
}

export async function sendPasswordResetEmail(email: string): Promise<void> {
  console.log('üìß Email de recuperaci√≥n enviado a:', email);
  return Promise.resolve();
}
